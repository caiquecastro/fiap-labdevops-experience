# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask pytest pytest-cov
              
      - name: Unit Test
        #run: python -m unittest -v test
        run: |
          coverage run --source=app -m pytest test.py
          coverage report -m
          coverage xml -i
        
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.9  #https://github.com/marketplace/actions/sonarcloud-scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
      - name: Docker Login
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: | 
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        run: |-
          gcloud run deploy ${{ vars.GOOGLE_MYAPP }} \
            --quiet \
            --region  ${{ vars.GOOGLE_REGION }} \
            --image ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest \
            --platform managed \
            --allow-unauthenticated \
            --project ${{ vars.GOOGLE_PROJECT_ID }} \
            --format json

